name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type check
      run: npm run type-check
      
    - name: Run build
      run: npm run build
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run tests
      run: npm run test:desktop
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel environment information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build project artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy project artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Comment deployment URL on PR
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployment } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'main'
          });
          
          if (deployment.length > 0) {
            const deploymentUrl = `https://${context.repo.repo}.vercel.app`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 デプロイが完了しました！\n\n**本番URL**: ${deploymentUrl}\n\n✅ テストも正常に通過しました。`
            });
          }

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.deploy.result == 'success'
      run: |
        echo "🎉 デプロイが正常に完了しました！"
        echo "✅ テスト: 成功"
        echo "🚀 デプロイ: 成功"
        
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.deploy.result == 'failure'
      run: |
        echo "❌ デプロイが失敗しました"
        echo "🔍 テスト結果: ${{ needs.test.result }}"
        echo "🚀 デプロイ結果: ${{ needs.deploy.result }}"
        exit 1