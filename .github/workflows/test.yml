name: 🧪 Flixo Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🎬 Run Playwright Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 🚀 Start application
      run: |
        npm start &
        sleep 10
        curl -f http://localhost:3000 || exit 1
      env:
        CI: true
        
    - name: 🧪 Run Playwright tests
      run: npx playwright test
      env:
        CI: true
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: 📸 Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
        
    - name: 📝 Generate test report
      if: always()
      run: ./scripts/generate-report.sh
      
    - name: 📋 Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: |
          TEST_EXECUTION_REPORT.md
          test-summary.html
        retention-days: 30

  # Visual regression testing (optional)
  visual-tests:
    name: 👁️ Visual Regression Tests
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🎭 Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 🚀 Start application
      run: |
        npm start &
        sleep 10
        
    - name: 👁️ Run visual tests
      run: npx playwright test tests/visual-test.spec.ts
      
    - name: 📸 Upload visual diff
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-diff
        path: test-results/
        retention-days: 7